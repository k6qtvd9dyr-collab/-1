import os
import telebot
import requests
import sqlite3
import threading
import time
from bs4 import BeautifulSoup

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN')
if not BOT_TOKEN:
    print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    exit(1)

bot = telebot.TeleBot(BOT_TOKEN)

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
def init_db():
    conn = sqlite3.connect('ads.db')
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            user_id INTEGER PRIMARY KEY,
            filters TEXT
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS seen_ads (
            ad_id TEXT PRIMARY KEY
        )
    ''')
    conn.commit()
    conn.close()

# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ Kufar
CATEGORIES = {
    '–Ω–æ—É—Ç–±—É–∫–∏': 'https://www.kufar.by/l/r?cat=17010&sort=lst.d',
    '—Ç–µ–ª–µ—Ñ–æ–Ω—ã': 'https://www.kufar.by/l/r?cat=16010&sort=lst.d', 
    '–∞–≤—Ç–æ': 'https://www.kufar.by/l/r?cat=1410&sort=lst.d',
    '–∫–≤–∞—Ä—Ç–∏—Ä—ã': 'https://www.kufar.by/l/r?cat=1010&sort=lst.d'
}

# –ü–∞—Ä—Å–∏–Ω–≥ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
def get_ads(category_url):
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        }
        response = requests.get(category_url, headers=headers, timeout=10)
        soup = BeautifulSoup(response.text, 'html.parser')
        
        ads = []
        # –ò—â–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π (—Å–µ–ª–µ–∫—Ç–æ—Ä –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è)
        items = soup.find_all('section', class_=lambda x: x and 'styles_card' in x)
        
        for item in items[:10]:  # –ü–µ—Ä–≤—ã–µ 10 –æ–±—ä—è–≤–ª–µ–Ω–∏–π
            try:
                title_elem = item.find('h3')
                price_elem = item.find('p')
                link_elem = item.find('a', href=True)
                
                if title_elem and price_elem and link_elem:
                    title = title_elem.text.strip()
                    price = price_elem.text.strip()
                    link = 'https://www.kufar.by' + link_elem['href'] if link_elem['href'].startswith('/') else link_elem['href']
                    
                    ads.append({
                        'title': title,
                        'price': price,
                        'link': link,
                        'id': link.split('/')[-1]
                    })
            except:
                continue
                
        return ads
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
        return []

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
def check_ads():
    while True:
        try:
            conn = sqlite3.connect('ads.db')
            cursor = conn.cursor()
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            cursor.execute('SELECT user_id, filters FROM users')
            users = cursor.fetchall()
            
            for user_id, filters_str in users:
                if not filters_str:
                    continue
                    
                # –ü—Ä–æ—Å—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
                filters = filters_str.split('|')
                category = filters[0] if len(filters) > 0 else '–Ω–æ—É—Ç–±—É–∫–∏'
                
                if category in CATEGORIES:
                    ads = get_ads(CATEGORIES[category])
                    
                    for ad in ads:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤–∏–¥–µ–ª–∏ –ª–∏ —É–∂–µ —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
                        cursor.execute('SELECT 1 FROM seen_ads WHERE ad_id = ?', (ad['id'],))
                        if not cursor.fetchone():
                            # –ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ!
                            message = f"üè∑Ô∏è {ad['title']}\nüí∞ {ad['price']}\nüîó {ad['link']}"
                            try:
                                bot.send_message(user_id, message)
                                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–µ
                                cursor.execute('INSERT INTO seen_ads (ad_id) VALUES (?)', (ad['id'],))
                                conn.commit()
                                time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                            except Exception as e:
                                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
            
            conn.close()
            time.sleep(60)  # –ñ–¥–µ–º 1 –º–∏–Ω—É—Ç—É
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ check_ads: {e}")
            time.sleep(60)

# –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.chat.id
    conn = sqlite3.connect('ads.db')
    cursor = conn.cursor()
    cursor.execute('INSERT OR IGNORE INTO users (user_id) VALUES (?)', (user_id,))
    conn.commit()
    conn.close()
    
    text = """
ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç OGUREC –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Kufar.

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/categories - –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
/my_filters - –º–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
/help - –ø–æ–º–æ—â—å

–ë–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –Ω–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É!
    """
    bot.send_message(user_id, text)

@bot.message_handler(commands=['categories'])
def categories(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    for category in CATEGORIES.keys():
        keyboard.add(telebot.types.KeyboardButton(category))
    
    bot.send_message(message.chat.id, "üìÅ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=keyboard)

@bot.message_handler(commands=['my_filters'])
def my_filters(message):
    conn = sqlite3.connect('ads.db')
    cursor = conn.cursor()
    cursor.execute('SELECT filters FROM users WHERE user_id = ?', (message.chat.id,))
    result = cursor.fetchone()
    conn.close()
    
    filters = result[0] if result else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã'
    bot.send_message(message.chat.id, f"üìä –í–∞—à–∏ —Ñ–∏–ª—å—Ç—Ä—ã: {filters}")

@bot.message_handler(commands=['help'])
def help_cmd(message):
    text = """
üìñ –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É OGUREC:

1. –ù–∞–∂–º–∏—Ç–µ /categories —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
2. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–Ω–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –Ω–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:
‚Ä¢ –Ω–æ—É—Ç–±—É–∫–∏
‚Ä¢ —Ç–µ–ª–µ—Ñ–æ–Ω—ã  
‚Ä¢ –∞–≤—Ç–æ
‚Ä¢ –∫–≤–∞—Ä—Ç–∏—Ä—ã
    """
    bot.send_message(message.chat.id, text)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@bot.message_handler(func=lambda message: message.text in CATEGORIES.keys())
def handle_category(message):
    user_id = message.chat.id
    category = message.text
    
    conn = sqlite3.connect('ads.db')
    cursor = conn.cursor()
    cursor.execute('UPDATE users SET filters = ? WHERE user_id = ?', (category, user_id))
    conn.commit()
    conn.close()
    
    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    remove_keyboard = telebot.types.ReplyKeyboardRemove()
    bot.send_message(user_id, f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category}' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –ë–æ—Ç –Ω–∞—á–Ω–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –Ω–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.", 
                    reply_markup=remove_keyboard)

# –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def start_monitoring():
    monitor_thread = threading.Thread(target=check_ads, daemon=True)
    monitor_thread.start()

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ OGUREC...")
    init_db()
    start_monitoring()
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω.")
    bot.polling(none_stop=True)
